{"version":3,"sources":["components/Record.js","components/TaskListMorning.js","components/TaskListAfternoon.js","components/TaskListEvening.js","components/TaskListNone.js","App.js","index.js"],"names":["Log","Airtable","apiKey","base","table","Record","props","delete","element","document","getElementById","id","style","opacity","then","resp","console","log","borderColor","borderWidth","markComplete","classList","add","update","concluded","remove","openInAt","window","open","href","this","className","name","notes","goals","split","map","goal","onClick","Component","today","Date","dd","String","getDate","padStart","mm","getMonth","TaskListMorning","activities","cycle","length","sort","a","b","fields","filter","record","includes","what_string","airtable","TaskListAfternoon","TaskListEvening","TaskListNone","App","useState","run","reRun","setActivities","useEffect","list","maxRecords","pageSize","view","cellFormat","data","records","catch","error","ReactDOM","render","tasks"],"mappings":"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","file":"static/js/main.eef2ca28.chunk.js","sourcesContent":["import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\n\nconst Log = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nclass Record extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    delete = () => {\n        var element = document.getElementById(this.props.id);\n        element.style.opacity = \"0.1\";\n\n        Log.delete(this.props.id).then(resp => {\n            console.log(\"Deleting\" + this.props.id)\n            console.log(resp)\n            \n            element.style.borderColor = \"red\";\n            element.style.borderWidth = \"4px\";\n        })\n    }\n\n    markComplete = () => {\n        var element = document.getElementById(this.props.id);\n        element.classList.add(\"border-green-700\")\n        \n        Log.update(this.props.id, {\"Concluded\": true}).then(resp => {\n            console.log(resp)\n            console.log(\"Concluded? \" + this.props.concluded)\n            \n            element.classList.remove(\"border\")\n            element.classList.add(\"border-4\")\n            element.classList.add(\"opacity-50\")\n        })\n    }\n\n    /* let atHref = \"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg\" + this.props.id; */\n\n    openInAt = () => {\n        console.log(\"Opening in Airtable\")\n        window.open(\"https://airtable.com/tblJy7BTWYrsbf5M5/viwlybKN4v201IY8V/\" + this.props.id)\n    }\n    \n    render() {\n        return (\n        <div>\n            <a href = {this.href} className={this.props.concluded === 1 ? \"border-4 border-green-700 shadow-sm active:border-gray-500 group block rounded-lg p-2 sm:p-4 hover:border-gray-300 m-0 sm:m-0 text-left opacity-50\" : \"shadow-sm active:border-gray-500 group block rounded-lg p-2 sm:p-4 hover:border-gray-300 m-0 sm:m-0 text-left border\"} id={this.props.id}>\n                \n                <div className=\"pb-0\">\n                    <div className=\"font-medium text-black text-xl sm:text-2xl\">{this.props.name}</div>\n                    {typeof this.props.notes !== \"undefined\" ? (<div className=\"text-xs sm:text-sm text-gray-500 m-t-3\">{this.props.notes}</div>) : \"\"}\n                </div>\n\n                <div className=\"space-y-0 hidden sm:block\">\n                    {'goals' in this.props && typeof this.props.goals !== \"undefined\" ? (\n                            this.props.goals\n                                .split(\",\")\n                                .map((goal) => (\n                                    <div className=\"inline-block rounded py-1 px-1 bg-gray-300 text-white mr-1 text-xs\">{goal}</div>\n                                ))\n                            ) : (\n                                \"\"\n                    )}\n                </div>\n\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 space-x-1 mt-1 space-y-0 sm:space-y-0\">\n                    <button onClick={() => this.markComplete()}\n                            className= \"rounded-lg px-3 py-2 border active:border-gray-500 text-center focus:outline-none text-xs text-gray-400 hover:bg-gray-50\"\n                        >\n                            Mark\n                    </button>\n\n                    <button onClick={() => this.delete()}\n                            className= \"rounded-lg px-3 py-2 border active:border-gray-500 text-center focus:outline-none text-xs text-gray-400 hover:bg-gray-50\"\n                        >\n                            Delete\n                    </button>\n\n                    <button onClick={() => this.openInAt()}\n                            className= \"rounded-lg px-3 py-2 border active:border-gray-500 text-center focus:outline-none text-xs text-gray-400 hover:bg-gray-50 hidden sm:block\" \n                        >\n                            Airtable\n                    </button>\n                </div>\n            </a>\n                \n        </div>\n        );\n    }\n}\n\nexport default Record","import React, { useState, useEffect } from 'react'\nimport Record from \"./Record\";\nimport Airtable from 'airtable-node'\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\ntoday = dd + '/' + mm;\n\nexport default function TaskListMorning(props) {\n\n    const activities = props.activities\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div>\n            <h1 className=\"text-3xl font-bold\">Morning</h1>\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense gap-2\">\n                \n                    {activities.length > 0 ? (\n                        activities\n                        /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                        .sort(function (a, b) {\n                            return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                        })\n                        .filter(record => record.fields[\"exec-date\"] === today)\n                        .filter(record => typeof record.fields[\"time-of-day\"] !== \"undefined\")\n                        .filter(record => record.fields[\"time-of-day\"].includes(\"Morning\") === true)\n                        .map((record) => (\n                            <Record\n                                name={record.fields.what_string}\n                                key={record.id}\n                                id={record.id}\n                                notes={record.fields[\"Learning points\"]}\n                                goals={record.fields[\"goals_string\"]}\n                                concluded={record.fields[\"Concluded formula\"]}\n                                airtable={props.airtable}\n                            />\n                        ))\n                    ) : (\n                        <p>Fetching propositions if any uncompleted...</p>\n                    )}\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport Record from \"./Record\";\nimport Airtable from 'airtable-node'\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\ntoday = dd + '/' + mm;\n\nexport default function TaskListAfternoon(props) {\n\n    const activities = props.activities\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div>\n            <h1 className=\"text-3xl font-bold mt-4\">Afternoon</h1>\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense gap-2\">\n                \n                    {activities.length > 0 ? (\n                        activities\n                        /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                        .sort(function (a, b) {\n                            return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                        })\n                        .filter(record => record.fields[\"exec-date\"] === today)\n                        .filter(record => typeof record.fields[\"time-of-day\"] !== \"undefined\")\n                        .filter(record => record.fields[\"time-of-day\"].includes(\"Afternoon\") === true)\n                        .map((record) => (\n                            <Record\n                                name={record.fields.what_string}\n                                key={record.id}\n                                id={record.id}\n                                notes={record.fields[\"Learning points\"]}\n                                goals={record.fields[\"goals_string\"]}\n                                concluded={record.fields[\"Concluded formula\"]}\n                                airtable={props.airtable}\n                            />\n                        ))\n                    ) : (\n                        <p>Fetching propositions if any uncompleted...</p>\n                    )}\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport Record from \"./Record\";\nimport Airtable from 'airtable-node'\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\ntoday = dd + '/' + mm;\n\nexport default function TaskListEvening(props) {\n\n    const activities = props.activities\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div>\n            <h1 className=\"text-3xl font-bold mt-4\">Evening</h1>\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense gap-1\">\n                \n                    {activities.length > 0 ? (\n                        activities\n                        /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                        .sort(function (a, b) {\n                            return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                        })\n                        .filter(record => record.fields[\"exec-date\"] === today)\n                        .filter(record => typeof record.fields[\"time-of-day\"] !== \"undefined\")\n                        .filter(record => record.fields[\"time-of-day\"].includes(\"Evening\") === true)\n                        .map((record) => (\n                            <Record\n                                name={record.fields.what_string}\n                                key={record.id}\n                                id={record.id}\n                                notes={record.fields[\"Learning points\"]}\n                                goals={record.fields[\"goals_string\"]}\n                                concluded={record.fields[\"Concluded formula\"]}\n                                airtable={props.airtable}\n                            />\n                        ))\n                    ) : (\n                        <p>Fetching propositions if any uncompleted...</p>\n                    )}\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport Record from \"./Record\";\nimport Airtable from 'airtable-node'\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\ntoday = dd + '/' + mm;\n\nexport default function TaskListNone(props) {\n\n    const activities = props.activities\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div>\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense gap-2\">\n                \n                    {activities.length > 0 ? (\n                        activities\n                        /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                        .sort(function (a, b) {\n                            return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                        })\n                        .filter(record => record.fields[\"exec-date\"] === today)\n                        .filter(record => typeof record.fields[\"time-of-day\"] === \"undefined\")\n                        .map((record) => (\n                            <Record\n                                name={record.fields.what_string}\n                                key={record.id}\n                                id={record.id}\n                                notes={record.fields[\"Learning points\"]}\n                                goals={record.fields[\"goals_string\"]}\n                                concluded={record.fields[\"Concluded formula\"]}\n                                airtable={props.airtable}\n                            />\n                        ))\n                    ) : (\n                        <p>Fetching propositions if any uncompleted...</p>\n                    )}\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport TaskListMorning from './components/TaskListMorning'\nimport TaskListAfternoon from './components/TaskListAfternoon'\nimport TaskListEvening from './components/TaskListEvening'\nimport TaskListNone from './components/TaskListNone';\nimport Airtable from 'airtable-node';\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nfunction App(props) {\n  const [run, reRun] = useState({});\n  console.log(run)\n\n  const [activities, setActivities] = useState({});\n\n  useEffect(() => {\n      airtable.list({\n          maxRecords: 999,\n          pageSize: 30,\n          view: \"L: Today's propositions\",\n          cellFormat: 'json'\n      })\n      .then((data) => {\n          setActivities(data.records);\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n  }, []);\n\n  console.log(activities)\n\n  return (\n    <div className=\"grid mx-auto max-w-5xl\">\n        {/* <ul className=\"grid grid-cols-2\">\n          {goals.length > 0 ? (\n              goals\n              .filter(record => record.fields.Name.length < 100)\n              .slice(0, 6)\n              .map((record) => (\n                  <FilterButton\n                      name={record.fields.Name}\n                      setFilter={setFilter}\n                  />\n              ))\n          ) : (\n              <p>Fetching Data...</p>\n          )}\n          </ul> */}\n      <div className=\"grid m-2\">\n        <TaskListNone \n          reRun={reRun}\n          activities={activities}\n          airtable={airtable}\n        />\n        <TaskListMorning \n          reRun={reRun}\n          activities={activities}\n          airtable={airtable}\n        />\n        <TaskListAfternoon\n          reRun={reRun}\n          activities={activities}\n          airtable={airtable}\n        />\n        <TaskListEvening\n          reRun={reRun}\n          activities={activities}\n          airtable={airtable}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//create a new Airtable object in React \nconst DATA = []\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}