{"version":3,"sources":["components/Record.js","components/TaskList.js","App.js","index.js"],"names":["Log","Airtable","apiKey","base","table","Record","delete","element","document","getElementById","props","id","style","opacity","then","resp","console","log","borderColor","borderWidth","markComplete","classList","add","update","concluded","remove","openInAt","window","open","href","this","className","name","notes","goals","split","map","goal","onClick","Component","airtable","TaskList","useState","activities","setActivities","useEffect","list","maxRecords","pageSize","view","cellFormat","data","records","catch","error","cycle","length","sort","a","b","fields","record","what_string","App","run","reRun","filter","ReactDOM","render","tasks"],"mappings":"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","file":"static/js/main.4a8452f6.chunk.js","sourcesContent":["import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\n\nconst Log = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nclass Record extends Component {\n    delete = () => {\n        var element = document.getElementById(this.props.id);\n        element.style.opacity = \"0.1\";\n\n        Log.delete(this.props.id).then(resp => {\n            console.log(\"Deleting\" + this.props.id)\n            console.log(resp)\n            \n            element.style.borderColor = \"red\";\n            element.style.borderWidth = \"4px\";\n        })\n    }\n\n    markComplete = () => {\n        var element = document.getElementById(this.props.id);\n        element.classList.add(\"border-green-700\")\n        \n        Log.update(this.props.id, {\"Concluded\": true}).then(resp => {\n            console.log(resp)\n            console.log(\"Concluded? \" + this.props.concluded)\n            \n            element.classList.remove(\"border\")\n            element.classList.add(\"border-4\")\n            element.classList.add(\"opacity-50\")\n        })\n    }\n\n    /* let atHref = \"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg\" + this.props.id; */\n\n    openInAt = () => {\n        console.log(\"Opening in Airtable\")\n        window.open(\"https://airtable.com/tblJy7BTWYrsbf5M5/viwlybKN4v201IY8V/\" + this.props.id)\n    }\n    \n    render() {\n        return (\n        <div>\n            <a href = {this.href} className={this.props.concluded === 1 ? \"border-4 border-green-700 shadow-sm active:border-gray-500 group block rounded-lg p-2 sm:p-4 hover:border-gray-300 m-1 sm:m-2 text-left opacity-50\" : \"shadow-sm active:border-gray-500 group block rounded-lg p-2 sm:p-4 hover:border-gray-300 m-1 sm:m-2 text-left border\"} id={this.props.id}>\n                <div className=\"pb-0\">\n                    <div className=\"font-medium text-black text-xl sm:text-2xl\">{this.props.name}</div>\n                    {typeof this.props.notes !== \"undefined\" ? (<div className=\"text-xs sm:text-sm text-gray-500 m-t-3\">{this.props.notes}</div>) : \"\"}\n                </div>\n\n                <div className=\"space-y-0 hidden sm:block\">\n                    {'goals' in this.props && typeof this.props.goals !== \"undefined\" ? (\n                            this.props.goals\n                                .split(\",\")\n                                .map((goal) => (\n                                    <div className=\"inline-block rounded py-1 px-1 bg-gray-300 text-white mr-1 text-xs\">{goal}</div>\n                                ))\n                            ) : (\n                                \"\"\n                    )}\n                </div>\n\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 space-x-1 mt-1 space-y-0 sm:space-y-0\">\n                    <button onClick={() => this.markComplete()}\n                            className= \"rounded-lg px-3 py-2 border active:border-gray-500 text-center focus:outline-none text-xs text-gray-400 hover:bg-gray-50\"\n                        >\n                            Mark\n                    </button>\n\n                    <button onClick={() => this.delete()}\n                            className= \"rounded-lg px-3 py-2 border active:border-gray-500 text-center focus:outline-none text-xs text-gray-400 hover:bg-gray-50\"\n                        >\n                            Delete\n                    </button>\n\n                    <button onClick={() => this.openInAt()}\n                            className= \"rounded-lg px-3 py-2 border active:border-gray-500 text-center focus:outline-none text-xs text-gray-400 hover:bg-gray-50 hidden sm:block\" \n                        >\n                            Airtable\n                    </button>\n                </div>\n            </a>\n                \n        </div>\n        );\n    }\n}\n\nexport default Record","import React, { useState, useEffect } from 'react'\nimport Record from \"./Record\";\nimport Airtable from 'airtable-node'\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nexport default function TaskList(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"L: Today's propositions\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense\">\n                {activities.length > 0 ? (\n                    activities\n                    /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                    .sort(function (a, b) {\n                        return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                    })\n                    .map((record) => (\n                        <Record\n                            name={record.fields.what_string}\n                            key={record.id}\n                            id={record.id}\n                            notes={record.fields[\"Learning points\"]}\n                            goals={record.fields[\"goals_string\"]}\n                            concluded={record.fields[\"Concluded formula\"]}\n                        />\n                    ))\n                ) : (\n                    <p>Fetching propositions if any uncompleted...</p>\n                )}\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport TaskList from './components/TaskList'\n\nfunction App(props) {\n  const [run, reRun] = useState({});\n  console.log(run)\n  /* // Get goals for filter button list\n  const [goals, setGoals] = useState({});\n\n  useState(() => {\n    airtable.list({\n        maxRecords: 999,\n        pageSize: 100,\n        view: 'Grid view',\n        cellFormat: 'json'\n    })\n    .then((data) => {\n        setGoals(data.records);\n        console.log(goals)\n    })\n    .catch((error) => {\n        console.log(error);\n    });\n  }, []);\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n  }\n\n  shuffleArray(goals)\n\n  // Use filter button to filter task list\n  const [filter, setFilter] = useState(null);\n  */\n\n  return (\n    <div className=\"grid mx-auto max-w-5xl\">\n        {/* <ul className=\"grid grid-cols-2\">\n          {goals.length > 0 ? (\n              goals\n              .filter(record => record.fields.Name.length < 100)\n              .slice(0, 6)\n              .map((record) => (\n                  <FilterButton\n                      name={record.fields.Name}\n                      setFilter={setFilter}\n                  />\n              ))\n          ) : (\n              <p>Fetching Data...</p>\n          )}\n          </ul> */}\n      <div className=\"grid place-items-center\">\n        <TaskList \n          filter=\"False\"\n          reRun={reRun}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//create a new Airtable object in React \nconst DATA = []\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}